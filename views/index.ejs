<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>WebRTC test</title>
  </head>
  <body>
      <p><button id="takeProfilePicture" type="button" autofocus="true">Create Profile Picture</button></p>
    <video id="videoTag" autoplay></video>
    <canvas id="profilePicCanvas" style="display: none;"></canvas>
    <div>
        <img id="profilePictureOutput">
    </div>
    <script>
      navigator.getUserMedia =
        navigator.getUserMedia ||
        navigator.webkitGetUserMedia ||
        navigator.mozGetUserMedia;

        var constraints = { audio: true, video: {
            minWidth: 640,
            maxWidth: 640,
            minHeight: 360,
            maxHeight: 480
        }};

        var videoArea = document.querySelector("video");
        var videoSelect = document.querySelector('#camera');
        var profilePicCanvas = document.querySelector('#profilePicCanvas');
        var profilePictureOutput = document.querySelector('#profilePictureOutput');
        var takePicButton = document.querySelector('#takeProfilePicture');
        var videoTag = document.querySelector('#videoTag');

        var width = 640;
        var height  = 0;
        var streaming = false;

        takePicButton.addEventListener('click', function(ev){
            takeProfilePic();
            ev.preventDefault();
        }, false);

        videoTag.addEventListener('canplay', function (ev){
            if(!streaming) {
                height = videoTag.videoHeight / (videoTag.videoWidth/width);

                    if(isNan(height)) {
                        height = width / (4/3);
                    }

                    videoTag.setAttribute('width', width);
                    videoTag.setAttribute('height', height);
                    profilePicCanvas.setAttribute('width', width);
                    profilePicCanvas.setAttribute('height', height);
                    streaming= true;
            }
        }, false);

        function takeProfilePic(){
            var context = profilePicCanvas.getContext('2d');
            if(width && height) {
                profilePicCanvas.width = width;
                profilePicCanvas.height = height;
                context.drawImage(videoTag, 0,0, width, height);

                var data = profilePicCanvas.toDataURL('image/png');
                profilePictureOutput.setAttribute('src', data);
            }
        }

        navigator.getUserMedia(constraints, onSuccess, onError);

        function onSuccess(stream) {
            console.log("Success, we have a stream");
            videoArea.srcObject = stream;
            video.onloadmetadata = function (e) {

                videoArea.play();
            }
        }

        function onError(error) {
            console.log("Error with getUserMedia: ", error)
        }
    </script>
  </body>
</html>
